#spring.datasource.url=jdbc=postgresql=//localhost=5457/frostini
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#s Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
### docker
#docker run --name myPostgresDbF2 -p 5457=5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=frostini -d postgres
# run springboot in port 8083
#
spring.datasource.url=jdbc:postgresql://postgresdbfrostini:5432/frostini
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

server.port=8083
spring.application.name=Frostini
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true

spring.logging.config="/app/log4j2.xml"

spring.rabbitmq.dynamic=true
spring.rabbitmq.port=5672
spring.rabbitmq.username=delivera
spring.rabbitmq.password=delivera
spring.rabbitmq.host=rabbitmq


springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui-custom.html