#spring.datasource.url=jdbc:postgresql://localhost:5457/frostini
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#s Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto= update
### docker
#docker run --name myPostgresDbF2 -p 5457:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=frostini -d postgres
# run springboot in port 8083
#server.port=8083
#springdoc.api-docs.path=/api-docs
#springdoc.swagger-ui.path=/swagger-ui-custom.html

server.port: 9001
spring.application.name: Frostini
spring.datasource.url: jdbc:postgresql://postgresdbfrostini:5432/frostini
spring.jpa.hibernate.ddl.auto: update

spring.logging.config: "/app/log4j2.xml"

#CREATE AN AMQPADMIN BEAN.
spring.rabbitmq.dynamic: true
# THE PORT TO WHICH THE CLIENT SHOULD CONNECT DEFAULTS TO 5672.
spring.rabbitmq.port: 5672
# USERNAME AND PASSWORD
spring.rabbitmq.username: delivera
spring.rabbitmq.password: delivera
# THE HOST, DEFAULTS TO LOCALHOST.
spring.rabbitmq.host: rabbitmq

spring.datasource.username=postgres
spring.datasource.password=postgres
